--- /var/ida/nextcloud-old/lib/base.php	2024-02-20 10:11:39.219443070 +0000
+++ /var/ida/nextcloud-old/lib/base.php.original	2024-02-20 10:11:39.219443070 +0000
@@ -68,8 +68,6 @@
 use OC\Encryption\HookManager;
 use OC\Files\Filesystem;
 use OC\Share20\Hooks;
-use OCP\Util;
-use \Firebase\JWT\JWT;
 
 require_once 'public/Constants.php';
 
@@ -609,17 +607,12 @@
 		//this doesn´t work always depending on the webserver and php configuration.
 		//Let´s try to overwrite some defaults anyway
 
-		//try to set execution time limits to 30 days
+		//try to set the maximum execution time to 60min
 		if (strpos(@ini_get('disable_functions'), 'set_time_limit') === false) {
-			@set_time_limit(2592000);
+			@set_time_limit(3600);
 		}
-		@ini_set('max_execution_time',2592000);
-		@ini_set('max_input_time', 2592000);
-		
-		//try to set the maximum filesize to 10TB and upload of up to 1 million files
-		@ini_set('upload_max_filesize', '10000G');
-		@ini_set('post_max_size', '10000G');
-		@ini_set('file_uploads', '1000000');
+		@ini_set('max_execution_time', '3600');
+		@ini_set('max_input_time', '3600');
 
 		self::setRequiredIniValues();
 		self::handleAuthHeaders();
@@ -1053,44 +1046,6 @@
 		if ($userSession->tryBasicAuthLogin($request, \OC::$server->getBruteForceThrottler())) {
 			return true;
 		}
-
-		$hostname = $_SERVER['SERVER_NAME'];
-		$domain = substr($hostname, strpos($hostname, '.') + 1);
-		$prefix = preg_replace('/[^a-zA-Z0-9]/', '_', $domain);
-
-		if (isset($_COOKIE[$prefix . '_fd_sso_session'])) {
-
-		    Util::writeLog('ida', 'base.php: handleLogin: domain=' . $domain
-		                  . ' fd_sso_session_id=' . $_COOKIE[$prefix . '_fd_sso_session_id']
-		                  . ' fd_sso_session=' . $_COOKIE[$prefix . '_fd_sso_session']
-						  , \OCP\Util::DEBUG);
-
-			$key =\OC::$server->getSystemConfig()->getValue('SSO_KEY');
-
-			try {
-			    $session = @JWT::decode($_COOKIE[$prefix . '_fd_sso_session'], $key, array('HS256'));
-		    } catch (\Exception $e) {
-			    $session = null;
-		    }
-
-			if ($session) {
-
-			    Util::writeLog('ida', 'base.php: handleLogin: session=' . json_encode($session), \OCP\Util::DEBUG);
-
-				try {
-				    if ($session->id == $_COOKIE[$prefix . '_fd_sso_session_id']
-				        && $session->fairdata_user
-				        && $session->fairdata_user->id
-				        && $session->services 
-				        && $session->services->IDA 
-			            && $userSession->loginWithSSOSession($session->id, $session->fairdata_user->id)) {
-			            return true;
-		            }
-				}
-				catch (\Exception $e) { ; }
-			}
-		}
-
 		return false;
 	}
 
